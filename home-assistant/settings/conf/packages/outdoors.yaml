---
ambient_station:
  api_key: !secret pws_api_key
  app_key: !secret pws_app_key

group:
  outdoor_lights:
    entities:
      - switch.backyard_lights
      - switch.front_patio_light
      - switch.kitchen_patio_light

  patio_lights:
    entities:
      - switch.front_patio_light
      - switch.kitchen_patio_light

sensor:
  - platform: darksky
    api_key: !secret dark_sky_api_key
    monitored_conditions:
      - cloud_cover

  - platform: filter
    name: "Filtered Wind Speed"
    entity_id: sensor.side_yard_wind_speed
    filters:
      - filter: lowpass
        time_constant: 10
        precision: 1

  - platform: filter
    name: "Filtered Outdoor Brightness (%)"
    entity_id: sensor.side_yard_solar_rad_log
    filters:
      - filter: range
        upper_bound: 100

  - platform: moon

  - platform: season

  - platform: template
    sensors:
      dark_sky_temperature:
        value_template: "{{ states.weather.weather.attributes.temperature }}"
        icon_template: mdi:thermometer
      friendly_season:
        friendly_name: Season
        value_template: "{{ states.sensor.season.state | title }}"
        icon_template: >
          {% if states.sensor.season.state == 'spring' %}
            mdi:flower
          {% elif states.sensor.season.state == 'summer' %}
            mdi:sunglasses
          {% elif states.sensor.season.state == 'autumn' %}
            mdi:leaf
          {% elif states.sensor.season.state == 'winter' %}
            mdi:snowflake
          {% endif %}
      moon_phase:
        friendly_name: Moon Phase
        value_template: >
          {{ states.sensor.moon.state | replace('_', ' ') | title }}
        icon_template: mdi:weather-night
      side_yard_solar_rad_log:
        friendly_name: "Side Yard: Brightness (Perception)"
        value_template: >
          {{ (
            states("sensor.side_yard_solar_rad") | int | log(10)/5
          )| round(2) * 100 }}
        unit_of_measurement: "%"
        device_class: illuminance
      sunrise:
        friendly_name: Next Sunrise
        value_template: >
          {{
            as_timestamp(states.sun.sun.attributes.next_rising) |
            timestamp_custom(' %I:%M %p') |
            replace(' 0', '')
          }}
        icon_template: mdi:weather-sunset-up
      sunset:
        friendly_name: Next Sunset
        value_template: >
          {{
            as_timestamp(states.sun.sun.attributes.next_setting) |
            timestamp_custom(' %I:%M %p') |
            replace(' 0', '')
          }}
        icon_template: mdi:weather-sunset-down

sun:

weather:
  - platform: darksky
    api_key: !secret dark_sky_api_key
    name: Weather
