---
alert:
  garage_left_open:
    name: ðŸš— The garage has been left open.
    done_message: âœ… The garage is now closed.
    title: Garage Left Open
    entity_id: cover.garage_door
    state: open
    repeat:
      - 10
    skip_first: true
    notifiers:
      - mobile_app_aarons_iphone
      - mobile_app_brittany_bachs_iphone
      - slack

  house_empty_and_insecure:
    name: "ðŸš¨ The house isn't secure and no one is home."
    done_message: "âœ… The house is now secure."
    title: House Empty and Insecure
    entity_id: sensor.secure_status
    state: Open
    repeat:
      - 5
    skip_first: true
    notifiers:
      - mobile_app_aarons_iphone
      - mobile_app_brittany_bachs_iphone
      - slack

  smoke_detected:
    name: "ðŸš¨ Smoke has been detected."
    done_message: "ðŸš¨ The house is now secure."
    title: House Empty and Insecure
    entity_id: sensor.secure_status
    state: Open
    repeat:
      - 5
    skip_first: true
    notifiers:
      - mobile_app_aarons_iphone
      - mobile_app_brittany_bachs_iphone
      - slack

automation:
  - alias: "Automatically lock up at night"
    trigger:
      platform: time
      at: "00:00:00"
    action:
      service: scene.turn_on
      data:
        entity_id: scene.good_night

  - alias: "Automatically lock up when we depart"
    trigger:
      platform: state
      entity_id: sensor.proximity_zone
      from: Home
    action:
      service: scene.turn_on
      data:
        entity_id: scene.depart_home

  - alias: "Disable SimpliSafe sounds in Blackout Mode"
    trigger:
      platform: state
      entity_id: input_boolean.blackout_mode
      to: "on"
    action:
      service: simplisafe.set_system_properties
      data:
        system_id: !secret simplisafe_system_id
        chime_volume: 0
        voice_prompt_volume: 0

  - alias: "Enable SimpliSafe sounds when leaving Blackout Mode"
    trigger:
      platform: state
      entity_id: input_boolean.blackout_mode
      to: "off"
    action:
      service: simplisafe.set_system_properties
      data:
        system_id: !secret simplisafe_system_id
        chime_volume: 2
        voice_prompt_volume: 2

  - alias: "Forward SimpliSafe events to Slack"
    trigger:
      - platform: event
        event_type: SIMPLISAFE_EVENT
    action:
      service: notify.slack
      data_template:
        message: >
            ðŸ“¥ SimpliSafe Event:
            {{ trigger.event.data.service_data.last_event_info }}

  - alias: "Forward SimpliSafe notifications to Slack"
    trigger:
      - platform: event
        event_type: SIMPLISAFE_NOTIFICATION
    action:
      service: notify.slack
      data_template:
        message: >
            ðŸ“¥ SimpliSafe Notification:
            {{ trigger.event.data.service_data.message }}

  - alias: "Notify when security status changes"
    trigger:
      platform: state
      entity_id: sensor.secure_status
    action:
      service: notify.slack
      data_template:
        message: >
          ðŸ“¥ The house's security has changed: {{ trigger.to_state.state }}

  - alias: "Notify when smoke detected"
    trigger:
      platform: state
      entity_id: group.smoke_detectors
      to: "on"
    action:
      - service: notify.slack
        data:
          message: "ðŸš¨ Smoke has been detected."
      - service: notify.mobile_app_brittany_bachs_iphone
        data:
          message: "ðŸš¨ Smoke has been detected."
          title: Insecure and Empty House

  - alias: "Turn lights off when person detected at nighttime leaves"
    trigger:
      platform: state
      entity_id: binary_sensor.front_door_camera_person_detected
      to: "off"
      for:
        minutes: 5
    condition:
      condition: time
      after: "23:00:00"
      before: "04:00:00"
    action:
      - service: switch.turn_off
        data:
          entity_id: switch.front_patio_light
      - service: switch.turn_off
        data:
          entity_id: group.living_room_lights

  - alias: "Turn lights on when person detected at nighttime"
    trigger:
      platform: state
      entity_id: binary_sensor.front_door_camera_person_detected
      to: "on"
    condition:
      condition: time
      after: "23:00:00"
      before: "04:00:00"
    action:
      - service: switch.turn_on
        data:
          entity_id: switch.front_patio_light
      - service: switch.turn_on
        data:
          entity_id: group.living_room_lights

group:
  smoke_detectors:
    entities:
      - binary_sensor.basement_sensor_smoke_carbon_monoxide_detector
      - binary_sensor.guest_bedroom_sensor_smoke_carbon_monoxide_detector
      - binary_sensor.kitchen_sensor_smoke_carbon_monoxide_detector
      - binary_sensor.upstairs_hallway_sensor_smoke_carbon_monoxide_detector

input_boolean:
  notify_when_person_on_camera_automation:
    icon: mdi:cctv
    name: Strange person detected
  randomize_nighttime_lighting_automation:
    icon: mdi:timer
    name: Randomize nighttime lighting
  randomize_nighttime_tvs_automation:
    icon: mdi:timer
    name: Randomize nighttime TVs

sensor:
  - platform: mqtt
    state_topic: "stat/fail2ban"
    name: "Fail2Ban: Failures"
    unit_of_measurement: failures
    icon: mdi:message-alert
    value_template: "{{ value_json.failure_count }}"

  - platform: mqtt
    state_topic: "stat/fail2ban"
    name: "Fail2Ban: Last Failure Jail"
    icon: mdi:target-account
    value_template: "{{ value_json.last_failure_jail }}"

  - platform: mqtt
    state_topic: "stat/fail2ban"
    name: "Fail2Ban: Last Failure IP"
    icon: mdi:target-account
    value_template: "{{ value_json.last_failure_ip }}"

  - platform: mqtt
    state_topic: "stat/fail2ban"
    name: "Fail2Ban: Last Failure Country"
    icon: mdi:map-marker
    value_template: "{{ value_json.last_failure_country }}"

  - platform: mqtt
    state_topic: "stat/fail2ban"
    name: "Fail2Ban: Last Failure Timestamp"
    icon: mdi:timetable
    value_template: "{{ value_json.last_failure_ts }}"

  - platform: mqtt
    state_topic: "stat/fail2ban"
    name: "Fail2Ban: Bans"
    unit_of_measurement: bans
    icon: mdi:message-alert
    value_template: "{{ value_json.ban_count }}"

  - platform: mqtt
    state_topic: "stat/fail2ban"
    name: "Fail2Ban: Last Ban Jail"
    icon: mdi:target-account
    value_template: "{{ value_json.last_ban_jail }}"

  - platform: mqtt
    state_topic: "stat/fail2ban"
    name: "Fail2Ban: Last Ban IP"
    icon: mdi:target-account
    value_template: "{{ value_json.last_ban_ip }}"

  - platform: mqtt
    state_topic: "stat/fail2ban"
    name: "Fail2Ban: Last Ban Country"
    icon: mdi:map-marker
    value_template: "{{ value_json.last_ban_country }}"

  - platform: mqtt
    state_topic: "stat/fail2ban"
    name: "Fail2Ban: Last Ban Timestamp"
    icon: mdi:timetable
    value_template: "{{ value_json.last_ban_ts }}"

  - platform: template
    sensors:
      secure_status:
        friendly_name: Security Status
        value_template: >
          {% if is_state('lock.front_door', 'locked')
             and is_state('lock.garage_fire_door', 'locked')
             and not is_state(
               'alarm_control_panel.8673_e_55th_avenue', 'disarmed'
             )
             and is_state('cover.garage_door', 'closed') %}
            Secure
          {% else %}
            Open
          {% endif %}
        icon_template: >
          {% if is_state('lock.front_door', 'locked')
             and is_state('lock.garage_fire_door', 'locked')
             and not is_state(
               'alarm_control_panel.8673_e_55th_avenue', 'disarmed'
             )
             and is_state('cover.garage_door', 'closed') %}
            mdi:lock
          {% else %}
            mdi:lock-open-outline
          {% endif %}

simplisafe:
  accounts:
    - username: !secret simplisafe_username
      password: !secret simplisafe_password
