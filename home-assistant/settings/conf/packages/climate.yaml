---
automation:
  - alias: "Climate Schedule"
    trigger:
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: climate.thermostat_mode
      - platform: state
        entity_id: input_boolean.blackout_mode
      - platform: state
        entity_id: input_boolean.climate_away_mode
      - platform: state
        entity_id: input_boolean.thermostat_eco_high_threshold
      - platform: state
        entity_id: input_boolean.thermostat_low_high_threshold
    action:
      choose:
        # A/C Away Mode
        - conditions:
            condition: template
            value_template: >
              {{
                is_state("climate.thermostat_mode", "cool")
                and is_state("input_boolean.climate_away_mode", "on")
              }}
          sequence:
            service: climate.set_temperature
            data_template:
              entity_id: climate.thermostat
              temperature: "{{ input_number.thermostat_eco_high_threshold }}"
        # A/C Daytime
        - conditions:
            condition: template
            value_template: >
              {{
                is_state("climate.thermostat_mode", "cool")
                and is_state("input_boolean.blackout_mode", "off")
                and is_state("input_boolean.climate_away_mode", "off")
              }}
          sequence:
            service: climate.set_temperature
            data:
              entity_id: climate.thermostat
              temperature: 75
        # A/C Nighttime
        - conditions:
            condition: template
            value_template: >
              {{
                is_state("climate.thermostat_mode", "cool")
                and is_state("input_boolean.blackout_mode", "on")
                and is_state("input_boolean.climate_away_mode", "off")
              }}
          sequence:
            service: climate.set_temperature
            data:
              entity_id: climate.thermostat
              temperature: 71
        # Heat Away Mode
        - conditions:
            condition: template
            value_template: >
              {{
                is_state("climate.thermostat_mode", "heat")
                and is_state("input_boolean.climate_away_mode", "on")
              }}
          sequence:
            service: climate.set_temperature
            data_template:
              entity_id: climate.thermostat
              temperature: "{{ input_number.thermostat_eco_low_threshold }}"
        # Heat Daytime
        - conditions:
            condition: template
            value_template: >
              {{
                is_state("climate.thermostat_mode", "heat")
                and is_state("input_boolean.blackout_mode", "off")
                and is_state("input_boolean.climate_away_mode", "off")
              }}
          sequence:
            service: climate.set_temperature
            data:
              entity_id: climate.thermostat
              temperature: 68
        # Heat Nighttime
        - conditions:
            condition: template
            value_template: >
              {{
                is_state("climate.thermostat_mode", "heat")
                and is_state("input_boolean.blackout_mode", "on")
                and is_state("input_boolean.climate_away_mode", "off")
              }}
          sequence:
            service: climate.set_temperature
            data:
              entity_id: climate.thermostat
              temperature: 70

  - alias: "Set Climate Away Mode when leaving in extreme temperatures"
    trigger:
      platform: state
      entity_id: sensor.proximity_zone
      to: Away
    condition:
      condition: template
      value_template: >
        {{
          states("sensor.side_yard_feels_like") <= states(
            "input_number.outdoor_extreme_low_threshold"
          )
          or
          states("sensor.side_yard_feels_like") >= states(
            "input_number.outdoor_extreme_high_threshold"
          )
        }}
    action:
      service: input_boolean.turn_on
      data:
        entity_id: input_boolean.climate_away_mode

  - alias: "Set Climate Away Mode when leaving in normal temperatures"
    trigger:
      platform: state
      entity_id: sensor.proximity_zone
      from: Home
    condition:
      condition: template
      value_template: >
        {{
          states("input_number.outdoor_extreme_low_threshold") <=
          states("sensor.side_yard_feels_like") <=
          states("input_number.outdoor_extreme_high_threshold")
        }}
    action:
      service: input_boolean.turn_on
      data:
        entity_id: input_boolean.climate_away_mode

  - alias: "Unset Climate Away Mode when arriving in extreme temperatures"
    trigger:
      platform: state
      entity_id: sensor.proximity_zone
      from: Away
    condition:
      condition: template
      value_template: >
        {{
          states("sensor.side_yard_feels_like") <= states(
            "input_number.outdoor_extreme_low_threshold"
          )
          or
          states("sensor.side_yard_feels_like") >= states(
            "input_number.outdoor_extreme_high_threshold"
          )
        }}
    action:
      service: input_boolean.turn_off
      data:
        entity_id: input_boolean.climate_away_mode

  - alias: "Unset Climate Away Mode when arriving in normal temperatures"
    trigger:
      - platform: state
        entity_id: sensor.proximity_zone
        from: Edge
        to: Nearby
      - platform: state
        entity_id: sensor.proximity_zone
        from: Nearby
        to: Home
    condition:
      condition: template
      value_template: >
        {{
          states("input_number.outdoor_extreme_low_threshold") <=
          states("sensor.side_yard_feels_like") <=
          states("input_number.outdoor_extreme_high_threshold")
        }}
    action:
      service: input_boolean.turn_off
      data:
        entity_id: input_boolean.climate_away_mode

input_boolean:
  climate_away_mode:
    name: "Away Mode"
    icon: mdi:thermostat

input_number:
  outdoor_extreme_high_threshold:
    name: "Outdoor: Extreme High"
    min: 20
    max: 100
    step: 1
    unit_of_measurement: °F
    icon: mdi:thermometer-chevron-up
  outdoor_extreme_low_threshold:
    name: "Outdoor: Extreme Low"
    min: 20
    max: 100
    step: 1
    unit_of_measurement: °F
    icon: mdi:thermometer-chevron-down
  thermostat_eco_high_threshold:
    name: "Eco: High"
    min: 50
    max: 80
    step: 1
    unit_of_measurement: °F
    icon: mdi:thermostat
  thermostat_eco_low_threshold:
    name: "Eco: Low"
    min: 50
    max: 80
    step: 1
    unit_of_measurement: °F
    icon: mdi:thermostat

sensor:
  - platform: darksky
    api_key: !secret dark_sky_api_key
    monitored_conditions:
      - cloud_cover

  - platform: filter
    name: Filtered Average Indoor Air Quality
    entity_id: sensor.average_indoor_air_quality
    filters:
      - filter: lowpass
        time_constant: 10
        precision: 1

  - platform: filter
    name: Filtered Average Indoor Humidity
    entity_id: sensor.average_indoor_humidity
    filters:
      - filter: lowpass
        time_constant: 10
        precision: 1

  - platform: filter
    name: Filtered Average Indoor Temperature
    entity_id: sensor.average_indoor_temperature
    filters:
      - filter: lowpass
        time_constant: 10
        precision: 1

  - platform: filter
    name: Filtered Wind Speed
    entity_id: sensor.side_yard_wind_speed
    filters:
      - filter: lowpass
        time_constant: 10
        precision: 1

  - platform: filter
    name: "Filtered Outdoor Brightness (%)"
    entity_id: sensor.side_yard_solar_rad_log
    filters:
      - filter: range
        upper_bound: 100

  - platform: min_max
    name: Average Indoor Air Quality
    type: mean
    round_digits: 1
    entity_ids:
      - air_quality.bedroom
      - air_quality.office_node_pro_air_quality

  - platform: min_max
    name: Average Indoor Humidity
    type: mean
    round_digits: 1
    entity_ids:
      - sensor.bedroom_humidity
      - sensor.master_bathroom_humidity
      - sensor.office_node_pro_humidity
      - sensor.side_yard_humidity_in
      - sensor.thermostat_humidity

  - platform: moon

  - platform: season

  - platform: template
    sensors:
      climate_schedy_target_temperature:
        value_template: >
          {{ states("schedy_room.thermostat_schedule_whole_house") }}
        device_class: temperature
        unit_of_measurement: °F
      dark_sky_temperature:
        value_template: "{{ state_attr('weather.weather', 'temperature') }}"
        icon_template: mdi:thermometer
      friendly_season:
        friendly_name: Season
        value_template: "{{ states('sensor.season') | title }}"
        icon_template: >
          {% if is_state("sensor.season", "spring") %}
            mdi:flower
          {% elif is_state("sensor.season", "summer") %}
            mdi:sunglasses
          {% elif is_state("sensor.season", "autumn") %}
            mdi:leaf
          {% else %}
            mdi:snowflake
          {% endif %}
      moon_phase:
        friendly_name: Moon Phase
        value_template: >
          {{ states("sensor.moon") | replace('_', ' ') | title }}
        icon_template: mdi:weather-night
      side_yard_solar_rad_log:
        friendly_name: "Side Yard: Brightness (Perception)"
        entity_id: sensor.side_yard_solar_rad
        value_template: >
          {{ (
            states("sensor.side_yard_solar_rad_lx") | int | log(10)/5
          )| round(2) * 100 }}
        unit_of_measurement: "%"
        device_class: illuminance
      sunrise:
        friendly_name: Next Sunrise
        value_template: >
          {{ as_timestamp(
            state_attr("sun.sun", "next_rising")
          ) | timestamp_custom(' %I:%M %p') | replace(' 0', '') }}
        icon_template: mdi:weather-sunset-up
      sunset:
        friendly_name: Next Sunset
        value_template: >
          {{ as_timestamp(
            state_attr("sun.sun", "next_setting")
          ) | timestamp_custom(' %I:%M %p') | replace(' 0', '') }}
        icon_template: mdi:weather-sunset-down

  - platform: min_max
    name: Average Indoor Temperature
    type: mean
    round_digits: 1
    entity_ids:
      - sensor.bedroom_temperature
      - sensor.fiddle_leaf_fig_temperature
      - sensor.guest_bedroom_sensor_temperature
      - sensor.kitchen_sensor_temperature
      - sensor.kitchen_sink_sensor_temperature
      - sensor.master_bathroom_temperature
      - sensor.office_node_pro_temperature
      - sensor.side_yard_inside_temp
      - sensor.thermostat_air_temperature
      - sensor.upstairs_hallway_sensor_temperature

  - platform: min_max
    name: Basement Temperature
    type: mean
    round_digits: 1
    entity_ids:
      - sensor.basement_sensor_temperature
      - sensor.guardian_b4e62d98118d_temperature

  - platform: min_max
    name: Kitchen Temperature
    type: mean
    round_digits: 1
    entity_ids:
      - sensor.thermostat_air_temperature
      - sensor.kitchen_sensor_temperature
      - sensor.kitchen_sink_sensor_temperature

  - platform: min_max
    name: Office Temperature
    type: mean
    round_digits: 1
    entity_ids:
      - sensor.office_node_pro_temperature
      - sensor.side_yard_inside_temp

sun:
