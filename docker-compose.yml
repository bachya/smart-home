---
version: "2"

services:

  almond:
    container_name: almond
    image: "stanfordoval/almond-server:${ALMOND_SERVER_VERSION}-portable"
    network_mode: host
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - almond-config:/var/lib/almond-server

  ecowitt2mqtt:
    container_name: ecowitt2mqtt
    depends_on:
      - vernemq
    environment:
      MQTT_BROKER: vernemq
      MQTT_PASSWORD: "${VERNEMQ_PASSWORD_ECOWITT}"
      MQTT_USERNAME: ecowitt
      MQTT_TOPIC: ecowitt2mqtt/GW1000B-WIFI7167
    image: "bachya/ecowitt2mqtt:${ECOWITT2MQTT_VERSION}"
    ports:
      - "8080:8080/tcp"
    restart: unless-stopped

  esphome-dashboard:
    container_name: esphome-dashboard
    image: "esphome/esphome:${ESPHOME_VERSION}"
    network_mode: host
    restart: always
    volumes:
      - ./esphome:/config
      - /etc/localtime:/etc/localtime:ro

  fail2ban:
    cap_add:
      - NET_ADMIN
      - NET_RAW
    container_name: fail2ban
    environment:
      TZ: America/Denver
      F2B_LOG_TARGET: /usr/local/fail2ban-log/fail2ban.log
      F2B_MAX_RETRY: 3
      F2B_IPTABLES_CHAIN: INPUT
    image: "crazymax/fail2ban:${FAIL2BAN_CONTAINER_VERSION}"
    network_mode: host
    restart: always
    volumes:
      - ./fail2ban/settings/jail.local:/etc/fail2ban/jail.local
      - /etc/localtime:/etc/localtime:ro
      - /var/log:/var/log:ro
      - fail2ban-config:/data
      - fail2ban-log:/usr/local/fail2ban-log

  fail2ban-mqtt-notifier:
    build: ./fail2ban-mqtt-notifier/docker
    command: /entry.sh
    container_name: fail2ban-mqtt-notifier
    image: bachya/fail2ban-mqtt-notifier:latest
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/log/nginx_access.log:/var/log/nginx_access.log:ro
      - /var/log/nginx_error.log:/var/log/nginx_error.log:ro
      - fail2ban-log:/var/log/fail2ban:ro

  hass:
    container_name: hass
    depends_on:
      - hass-db
      - openzwave
      - vernemq
    image: "homeassistant/home-assistant:${HOME_ASSISTANT_CORE_VERSION}"
    network_mode: host
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - hass-config:/config

  hass-db:
    container_name: hass-db
    environment:
      POSTGRES_DB: "${HASS_DB_NAME}"
      POSTGRES_PASSWORD: "${HASS_DB_PASSWORD}"
      POSTGRES_USER: "${HASS_DB_USER}"
    image: "postgres:${POSTGRES_VERSION}-alpine"
    ports:
      - "5432:5432/tcp"
    restart: always
    volumes:
      - hass-db-data:/var/lib/postgresql/data

  metrics2mqtt:
    build:
      context: metrics2mqtt/docker
      args:
        version: 0.1.18
    container_name: metrics2mqtt
    depends_on:
      - vernemq
    environment:
      COMMAND_OPTIONS_STRING: >
        --name=hub --interval=60 --cpu=60 --interval=10 --vm --du="/" -vvvvv
      MQTT_BROKER: vernemq
      MQTT_PASSWORD: "${VERNEMQ_PASSWORD_METRICS2MQTT}"
      MQTT_USERNAME: metrics2mqtt
    restart: unless-stopped
    volumes:
      - /proc:/proc

  nginx:
    cap_add:
      - NET_ADMIN
    container_name: nginx
    image: "50e49b6b-b382-4336-bf43-a74c32e762a0.bachyaproductions.com:18884\
            /bachya/nginx-geoip:${NGINX_VERSION}"
    network_mode: host
    restart: always
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /etc/localtime:/etc/localtime:ro
      - /etc/ssl:/etc/ssl:ro
      - /var/log/nginx_access.log:/var/log/nginx_access.log
      - /var/log/nginx_error.log:/var/log/nginx_error.log
      - nginx-config:/etc/nginx

  openzwave:
    container_name: openzwave
    depends_on:
      - vernemq
    # image: "openzwave/ozwdaemon:allinone-amd64-${OPENZWAVE_VERSION}"
    image: "openzwave:amb-leviton"
    devices:
      - "/dev/zwave:/dev/zwave"
    environment:
      MQTT_PASSWORD: "${VERNEMQ_PASSWORD_OPEN_ZWAVE}"
      MQTT_SERVER: vernemq
      MQTT_USERNAME: open_zwave
      OZW_NETWORK_KEY: "${OPENZWAVE_NETWORK_KEY}"
      USB_PATH: /dev/zwave
    ports:
      - "1983:1983/tcp"
      - "5901:5901/tcp"
      - "7800:7800/tcp"
    restart: always
    security_opt:
      - seccomp:unconfined
    volumes:
      - openzwave-config:/opt/ozw/config

  portainer:
    container_name: portainer
    image: "portainer/portainer-ce:${PORTAINER_VERSION}-alpine"
    ports:
      - "127.0.0.1:9000:9000/tcp"
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-config:/data

  vernemq:
    container_name: vernemq
    environment:
      DOCKER_VERNEMQ_ACCEPT_EULA: "yes"
      DOCKER_VERNEMQ_USER_ECOWITT: "${VERNEMQ_PASSWORD_ECOWITT}"
      DOCKER_VERNEMQ_USER_HASS: "${VERNEMQ_PASSWORD_HASS}"
      DOCKER_VERNEMQ_USER_METRICS2MQTT: "${VERNEMQ_PASSWORD_METRICS2MQTT}"
      DOCKER_VERNEMQ_USER_MIFLORA-MQTT-DAEMON: >
        ${VERNEMQ_PASSWORD_MIFLORA_MQTT_DAEMON}
      DOCKER_VERNEMQ_USER_OCTOPRINT2MQTT: >
        ${VERNEMQ_PASSWORD_OCTOPRINT2MQTT}
      DOCKER_VERNEMQ_USER_OPEN_ZWAVE: "${VERNEMQ_PASSWORD_OPEN_ZWAVE}"
      DOCKER_VERNEMQ_USER_RTLAMR: "${VERNEMQ_PASSWORD_RTLAMR}"
      DOCKER_VERNEMQ_USER_SONOFF: "${VERNEMQ_PASSWORD_SONOFF}"
      DOCKER_VERNEMQ_USER_WYZE: "${VERNEMQ_PASSWORD_WYZE}"
      DOCKER_VERNEMQ_USER_ZIGBEE2MQTTASSISTANT: >
        ${VERNEMQ_PASSWORD_Z2M_ASSISTANT}
      DOCKER_VERNEMQ_PLUGINS.vmq_bridge: "on"
      DOCKER_VERNEMQ_vmq_bridge.ssl.br0.cafile: >
        /etc/ssl/certs/DST_Root_CA_X3.pem
      DOCKER_VERNEMQ_vmq_bridge.ssl.br0.insecure: "on"
      DOCKER_VERNEMQ_vmq_bridge.ssl.br0.max_outgoing_buffered_messages: 100
      DOCKER_VERNEMQ_vmq_bridge.ssl.br0.password: "${VERNEMQ_BRIDGE_PASSWORD}"
      DOCKER_VERNEMQ_vmq_bridge.ssl.br0.topic.1: "* in"
      DOCKER_VERNEMQ_vmq_bridge.ssl.br0.username: hub_mqtt
      DOCKER_VERNEMQ_vmq_bridge.ssl.br0: "${VERNEMQ_BRIDGE_HOST}"
    image: "vernemq/vernemq:${VERNEMQ_VERSION}-alpine"
    ports:
      - "1883:1883/tcp"
      - "127.0.0.1:8888:8888/tcp"
    restart: always
    user: root
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/ssl:/etc/ssl:ro
      - /usr/share/ca-certificates:/usr/share/ca-certificates:ro
      - vernemq-data:/vernemq/data

  zigbee2mqtt:
    container_name: zigbee2mqtt
    depends_on:
      - vernemq
    devices:
      - "/dev/zigbee:/dev/zigbee"
    environment:
      TZ: America/Denver
    image: "koenkk/zigbee2mqtt:${Z2M_VERSION}"
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - zigbee2mqtt-config:/app/data

  zigbee2mqttassistant:
    container_name: zigbee2mqttassistant
    depends_on:
      - vernemq
    environment:
      Z2MA_SETTINGS__MQTTSERVER: vernemq
      Z2MA_SETTINGS__MQTTUSERNAME: "${Z2M_ASSISTANT_MQTT_USERNAME}"
      Z2MA_SETTINGS__MQTTPASSWORD: "${Z2M_ASSISTANT_MQTT_PASSWORD}"
    image: "carldebilly/zigbee2mqttassistant:${Z2M_ASSISTANT_VERSION}"
    ports:
      - "127.0.0.1:8880:80/tcp"
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - zigbee2mqtt-config:/app/data

volumes:

  almond-config:
  fail2ban-config:
  fail2ban-log:
  hass-config:
  hass-db-data:
  nginx-config:
  openzwave-config:
  portainer-config:
  vernemq-data:
  zigbee2mqtt-config:
