---
version: "3"

services:

  appdaemon:
    container_name: appdaemon
    depends_on:
      - hass
    environment:
      EXTRA_CMD: -D INFO
    image: acockburn/appdaemon:3.0.5
    ports:
      - "127.0.0.1:5051:5051"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - appdaemon-config:/conf

  esphome-dashboard:
    container_name: esphome-dashboard
    image: esphome/esphome:1.13.6
    network_mode: "host"
    restart: unless-stopped
    volumes:
      - ./esphome:/config
      - /etc/localtime:/etc/localtime:ro

  fail2ban:
    cap_add:
      - NET_ADMIN
      - NET_RAW
    container_name: fail2ban
    environment:
      TZ: America/Denver
      F2B_LOG_TARGET: /usr/local/fail2ban-log/fail2ban.log
      F2B_MAX_RETRY: 3
      F2B_IPTABLES_CHAIN: INPUT
    image: crazymax/fail2ban:0.10.4
    network_mode: "host"
    restart: unless-stopped
    volumes:
      - ./fail2ban/settings/jail.local:/etc/fail2ban/jail.local
      - /etc/localtime:/etc/localtime:ro
      - /var/log:/var/log:ro
      - fail2ban-config:/data
      - fail2ban-log:/usr/local/fail2ban-log

  fail2ban-mqtt-notifier:
    build: ./fail2ban-mqtt-notifier/docker
    command: /entry.sh
    container_name: fail2ban-mqtt-notifier
    image: bachya/fail2ban-mqtt-notifier:latest
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/log/nginx:/var/log/nginx:ro
      - fail2ban-log:/var/log/fail2ban:ro

  glances:
    build:
      context: ./glances/docker
      args:
        version: 3.0
    command: /usr/bin/supervisord -c /etc/supervisor.conf
    container_name: glances
    image: bachya/glances
    ports:
      - "61208:61208/tcp"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - glances-config:/etc/glances:ro

  hass:
    container_name: hass
    depends_on:
      - glances
      - mysql
      - vernemq
    devices:
      - "/dev/zwave:/dev/zwave"
    image: homeassistant/home-assistant:0.99.2
    network_mode: "host"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - hass-config:/config

  mysql:
    container_name: mysql
    environment:
      MYSQL_DATABASE: recorder_db
      MYSQL_PASSWORD: recorder_password
      MYSQL_ROOT_PASSWORD: mysql_root_password
      MYSQL_USER: recorder_user
    image: bianjp/mariadb-alpine:latest
    ports:
      - "3306:3306/tcp"
    restart: unless-stopped
    volumes:
      - /var/lib/docker/mysql:/var/lib/mysql

  nginx:
    build:
      context: ./nginx/docker
      args:
        maxminddb_version: 1.3.2
        nginx_version: 1.17.4
        ngx_http_geoip2_module_version: 3.2
    cap_add:
      - NET_ADMIN
    command: /usr/bin/supervisord -c /etc/supervisor.conf
    container_name: nginx
    depends_on:
      - appdaemon
      - esphome-dashboard
      - hass
      - portainer
      - vernemq
    image: bachya/nginx
    network_mode: "host"
    ports:
      - "443:443/tcp"
    restart: unless-stopped
    volumes:
      - ./nginx/settings/conf.d:/etc/nginx/conf.d
      - ./nginx/settings/dhparams.pem:/etc/nginx/dhparams.pem
      - ./nginx/settings/geoip.rules:/etc/nginx/geoip.rules
      - ./nginx/settings/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/settings/proxy.conf:/etc/nginx/proxy.conf
      - ./nginx/settings/security.conf:/etc/nginx/security.conf
      - ./nginx/settings/ssl.conf:/etc/nginx/ssl.conf
      - ./nginx/settings/useragents.rules:/etc/nginx/useragents.rules
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /etc/localtime:/etc/localtime:ro
      - /etc/ssl:/etc/ssl:ro
      - /var/log/nginx:/var/log/nginx

  portainer:
    container_name: portainer
    image: portainer/portainer:1.22.0
    ports:
      - "127.0.0.1:9000:9000/tcp"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-config:/data

  vernemq:
    container_name: vernemq
    environment:
      DOCKER_VERNEMQ_USER_user_1: "password"
      DOCKER_VERNEMQ_plugins.vmq_bridge: "on"
      DOCKER_VERNEMQ_vmq_bridge.ssl.br0.cafile: /etc/ssl/certs/DST_Root_CA_X3.pem
      DOCKER_VERNEMQ_vmq_bridge.ssl.br0.insecure: "on"
      DOCKER_VERNEMQ_vmq_bridge.ssl.br0.max_outgoing_buffered_messages: 100
      DOCKER_VERNEMQ_vmq_bridge.ssl.br0.password: "remote_password"
      DOCKER_VERNEMQ_vmq_bridge.ssl.br0.topic.1: "* in"
      DOCKER_VERNEMQ_vmq_bridge.ssl.br0.username: hub_mqtt
      DOCKER_VERNEMQ_vmq_bridge.ssl.br0: remote_mqtt.myserver.com:18883
    image: erlio/docker-vernemq:1.9.2-alpine
    ports:
      - "1883:1883/tcp"
      - "127.0.0.1:8888:8888/tcp"
    restart: unless-stopped
    user: root
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/ssl:/etc/ssl:ro
      - /usr/share/ca-certificates:/usr/share/ca-certificates:ro

  zigbee2mqtt:
    container_name: zigbee2mqtt
    depends_on:
      - vernemq
    devices:
      - "/dev/zigbee:/dev/zigbee"
    environment:
      TZ: America/Denver
    image: koenkk/zigbee2mqtt:1.6.0
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - zigbee2mqtt-config:/app/data

  zigbee2mqttassistant:
    container_name: zigbee2mqttassistant
    depends_on:
      - vernemq
    environment:
      Z2MA_SETTINGS__MQTTSERVER: vernemq
      Z2MA_SETTINGS__MQTTUSERNAME: zigbee2mqttassistant
      Z2MA_SETTINGS__MQTTPASSWORD: 8tYtazjfRVgXzbjsHtf7AcTKH
    image: carldebilly/zigbee2mqttassistant:0.2.0-dev.66
    ports:
      - "127.0.0.1:8880:80/tcp"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - zigbee2mqtt-config:/app/data

volumes:

  appdaemon-config:
  fail2ban-config:
  fail2ban-log:
  glances-config:
  hass-config:
  portainer-config:
  zigbee2mqtt-config:
