---
version: "3"

networks:
  default:
    ipam:
      config:
        - subnet: 192.168.0.0/16

services:

  appdaemon:
    container_name: appdaemon
    depends_on:
      - hass
    environment:
      EXTRA_CMD: -D INFO
    image: acockburn/appdaemon:3.0.5
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - appdaemon-config:/conf
      - shared:/shared

  esphome-dashboard:
    container_name: esphome-dashboard
    image: esphome/esphome:1.13.6
    network_mode: "host"
    restart: unless-stopped
    volumes:
      - ./esphome:/config
      - /etc/localtime:/etc/localtime:ro

  glances:
    build:
      context: ./glances/docker
      args:
        version: 3.0
    command: /usr/bin/supervisord -c /etc/supervisor.conf
    container_name: glances
    image: bachya/glances
    ports:
      - "61208:61208/tcp"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - glances-config:/etc/glances:ro

  grafana:
    container_name: grafana
    depends_on:
      - influxdb
    environment:
      GF_SECURITY_ADMIN_PASSWORD: password
      GF_SECURITY_ADMIN_USER: admin
      GF_SERVER_DOMAIN: grafana.myserver.com
    image: grafana/grafana:6.3.0
    ports:
      - "3000:3000/tcp"
    restart: unless-stopped
    user: "104"
    volumes:
      - grafana-config:/var/lib/grafana

  hass:
    container_name: hass
    depends_on:
      - glances
      - mosquitto
      - mysql
    devices:
      - "/dev/zigbee:/dev/zigbee"
      - "/dev/zwave:/dev/zwave"
    image: homeassistant/intel-nuc-homeassistant:0.97.0
    network_mode: "host"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - hass-config:/config
      - shared:/shared

  jupyterlab:
    build:
      context: ./jupyterlab/docker
    container_name: jupyterlab
    depends_on:
      - hass
    environment:
      JUPYTER_ENABLE_LAB: "yes"
    image: bachya/jupyterlab
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - jupyterlab-config:/home/jovyan

  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto:1.6.4
    ports:
      - "1883:1883/tcp"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/ssl:/etc/ssl:ro
      - /usr/share/ca-certificates:/usr/share/ca-certificates:ro
      - mosquitto-config:/mosquitto/config
      - mosquitto-data:/mosquitto/data

  mysql:
    container_name: mysql
    environment:
      MYSQL_DATABASE: recorder_db
      MYSQL_PASSWORD: recorder_password
      MYSQL_ROOT_PASSWORD: mysql_root_password
      MYSQL_USER: recorder_user
    image: bianjp/mariadb-alpine:latest
    ports:
      - "3306:3306/tcp"
    restart: unless-stopped
    volumes:
      - /var/lib/docker/mysql:/var/lib/mysql

  nginx:
    build:
      context: ./nginx/docker
      args:
        maxminddb_version: 1.3.2
        nginx_version: 1.15.12
        ngx_http_geoip2_module_version: 3.2
    cap_add:
      - NET_ADMIN
    command: /usr/bin/supervisord -c /etc/supervisor.conf
    container_name: nginx
    depends_on:
      - appdaemon
      - hass
    image: bachya/nginx
    networks:
      default:
        ipv4_address: 192.168.7.7
    ports:
      - "443:443/tcp"
    restart: unless-stopped
    volumes:
      - ./nginx/settings/fail2ban/filter.d/nginx-4xx.conf:/etc/fail2ban/filter.d/nginx-4xx.conf
      - ./nginx/settings/fail2ban/filter.d/nginx-noproxy.conf:/etc/fail2ban/filter.d/nginx-noproxy.conf
      - ./nginx/settings/fail2ban/filter.d/nginx-req-limit.conf:/etc/fail2ban/filter.d/nginx-req-limit.conf
      - ./nginx/settings/fail2ban/jail.d/nginx.conf:/etc/fail2ban/jail.d/nginx.conf
      - ./nginx/settings/fail2ban/jail.local:/etc/fail2ban/jail.local
      - ./nginx/settings/nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/settings/nginx/dhparams.pem:/etc/nginx/dhparams.pem
      - ./nginx/settings/nginx/geoip.rules:/etc/nginx/geoip.rules
      - ./nginx/settings/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/settings/nginx/proxy.conf:/etc/nginx/proxy.conf
      - ./nginx/settings/nginx/security.conf:/etc/nginx/security.conf
      - ./nginx/settings/nginx/ssl.conf:/etc/nginx/ssl.conf
      - ./nginx/settings/nginx/useragents.rules:/etc/nginx/useragents.rules
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /etc/localtime:/etc/localtime:ro
      - /etc/ssl:/etc/ssl:ro

  node-red:
    container_name: node-red
    image: nodered/node-red-docker:0.20.5-slim-v10
    ports:
      - "1880:1880/tcp"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - node-red-config:/data

  portainer:
    container_name: portainer
    image: portainer/portainer:1.21.0
    ports:
      - "9000:9000/tcp"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-config:/data

volumes:

  appdaemon-config:
  glances-config:
  hass-config:
  jupyterlab-config:
  mosquitto-config:
  mosquitto-data:
  node-red-config:
  portainer-config:
  shared:
