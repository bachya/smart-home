---
kind: pipeline
name: Linting

trigger:
  branch:
    - master
    - feature/*

steps:
  - name: appdaemon-linting
    image: python:3
    commands:
      - pip3 install flake8 mypy pylint yamllint
      - flake8 ./appdaemon/settings/apps/
      - mypy --ignore-missing-imports ./appdaemon/settings/apps/
      - pylint --rcfile ./appdaemon/settings/pylintrc appdaemon/settings/apps/
      - yamllint ./appdaemon/settings/
  - name: esphome-linting
    image: python:3
    commands:
      - pip3 install yamllint
      - yamllint ./esphome/
  - name: hass-linting
    image: python:3
    commands:
      - pip3 install yamllint
      - yamllint ./home-assistant/settings/
  - name: shellcheck
    image: koalaman/shellcheck-alpine:stable
    pull: always
    commands:
      - shellcheck --version
      - shellcheck ./bin/*
  - name: slack
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
      channel:
        from_secret: slack_channel_name
      template: >
        {{#success build.status}}
          `Pre-Flight` built successfully (`{{repo.name}}/{{build.branch}}`)
        {{else}}
          `Pre-Flight` failed to build (`{{repo.name}}/{{build.branch}}`)
        {{/success}}
    when:
      status: [success, failure]

---
kind: pipeline
name: Home Assistant

trigger:
  branch:
    - master
    - feature/*

steps:
  - name: dev
    image: homeassistant/home-assistant:dev
    pull: always
    commands:
      - cd /usr/src/app
      - "python -m homeassistant -c /drone/src/home-assistant/settings \
         --script check_config"
  - name: latest
    image: homeassistant/home-assistant:latest
    pull: always
    commands:
      - cd /usr/src/app
      - "python -m homeassistant -c /drone/src/home-assistant/settings \
         --script check_config"
  - name: rc
    image: homeassistant/home-assistant:rc
    pull: always
    commands:
      - cd /usr/src/app
      - "python -m homeassistant -c /drone/src/home-assistant/settings \
         --script check_config"
  - name: slack
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
      channel:
        from_secret: slack_channel_name
      template: >
        {{#success build.status}}
          `Home Assistant` built successfully (`{{repo.name}}/{{build.branch}}`)
        {{else}}
          `Home Assistant` failed to build (`{{repo.name}}/{{build.branch}}`)
        {{/success}}
    when:
      status: [success, failure]

---
kind: pipeline
name: ESPHome

trigger:
  branch:
    - master
    - feature/*

steps:
  - name: beta
    image: esphome/esphome:beta
    pull: always
    commands:
      - "for file in $(find /drone/src/esphome -type f -name \"*.yaml\" -not \
         -name \"secrets.yaml\"); do esphome \"$file\" config; done"
  - name: latest
    image: esphome/esphome:latest
    pull: always
    commands:
      - "for file in $(find /drone/src/esphome -type f -name \"*.yaml\" -not \
         -name \"secrets.yaml\"); do esphome \"$file\" config; done"
  - name: slack
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
      channel:
        from_secret: slack_channel_name
      template: >
        {{#success build.status}}
          `ESPHome` built successfully (`{{repo.name}}/{{build.branch}}`)
        {{else}}
          `ESPHome` failed to build (`{{repo.name}}/{{build.branch}}`)
        {{/success}}
    when:
      status: [success, failure]

---
kind: pipeline
name: NGINX

trigger:
  branch:
    - master
    - feature/*

steps:
  - name: configs
    image: yandex/gixy:latest
    pull: always
    commands:
      - ln -s /drone/src/nginx/settings/nginx /etc/nginx
      - gixy /etc/nginx/nginx.conf
  - name: slack
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
      channel:
        from_secret: slack_channel_name
      template: >
        {{#success build.status}}
          `NGINX` built successfully (`{{repo.name}}/{{build.branch}}`)
        {{else}}
          `NGINX` failed to build (`{{repo.name}}/{{build.branch}}`)
        {{/success}}
    when:
      status: [success, failure]
