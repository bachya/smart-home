#!/bin/bash
set -euxo pipefail

LAST_BUILD_FILEPATH="/tmp/hub_last_build"
REPO_PATH="$( dirname "$( cd "$(dirname "$0")" ; pwd -P )" )"

API_BASE="https://bf5959ab-1a7e-47b7-9528-19651d1b8018.bachyaproductions.com:18884"
API_LAST_BUILD="api/repos/bachya/hub/builds"
API_TOKEN="mKAk7aBngFlvcpWe8ir4FGcSrJ6lgzyd"
API_USER_AGENT="User-Agent: Paw/3.1.8 (Macintosh; OS X/10.14.6) GCDHTTPRequest"

SLACK_HOOK_URL="https://hooks.slack.com/services/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"

TARGET_BRANCH="master"

function fetch_latest_build_number() {
    curl \
        -s "$API_BASE/$API_LAST_BUILD" \
        -H "$API_USER_AGENT" \
        -H "Authorization: Bearer $API_TOKEN" \
        | jq 'map(select(.status == "success"))[0].id'
}

function remote_git() {
    git --git-dir "$REPO_PATH"/.git --work-tree="$REPO_PATH" "$@"
}

function send_slack_message() {
   local message="$1"
   local color="$2"

   curl \
       -X "POST" \
     -H 'Content-Type: application/json' \
     -d $'{ "attachments": [ { "color": "'"$color"'", "text": "'"$message"'" } ] }' \
    "$SLACK_HOOK_URL"
}

function should_update() {
    local latest_build_number
    local saved_build_number

    # If the repo has a branch other than the target one checked out, don't trigger
    # a build:
    if [ "$(remote_git rev-parse --abbrev-ref HEAD)" != "$TARGET_BRANCH" ]; then
        echo "false"
        return
    fi

    latest_build_number=$(fetch_latest_build_number)

    # If the last build number hasn't been saved, save it, but don't trigger
    # a build
    if [ ! -f "$LAST_BUILD_FILEPATH" ]; then
        echo "$latest_build_number" > "$LAST_BUILD_FILEPATH"
        echo "false"
        return
    fi

    saved_build_number=$(cat "$LAST_BUILD_FILEPATH")

    # If the build number is the same as the last one retrieved, don't trigger
    # a build:
    if [ "$latest_build_number" == "$saved_build_number" ]; then
        echo "false"
        return
    fi

    echo "$latest_build_number" > "$LAST_BUILD_FILEPATH"

    echo "true"
}

function update() {
    "$REPO_PATH"/bin/build
    local saved_build_number

    saved_build_number=$(cat "$LAST_BUILD_FILEPATH")

    send_slack_message \
        "\`hub\`: Deployment for build #$saved_build_number starting..." \
        "#1539e0"
    send_slack_message \
        "\`hub\`: Deployment for build #$saved_build_number completed" \
        "good"
}


dirty=$(should_update)
if [ "$dirty" == "true" ]; then
    update > /dev/null 2>&1
    echo -n "Deployment complete"
else
    echo -n "No deployment required"
fi
