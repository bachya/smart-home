---
adjust_climate_on_proximity_automation:
  module: climate
  class: AdjustOnProximity
  dependencies:
    - climate_manager
    - presence_manager

climate_manager:
  module: climate
  class: ClimateManager
  entity_ids:
    away_mode: input_boolean.climate_away_mode
    eco_high_threshold: input_number.thermostat_eco_high_threshold
    eco_low_threshold: input_number.thermostat_eco_low_threshold
    humidity_sensor: sensor.average_indoor_humidity
    indoor_temperature_sensor: sensor.average_indoor_temperature
    outdoor_brightness_percent_sensor: sensor.filtered_outdoor_brightness
    outdoor_brightness_sensor: sensor.side_yard_solar_rad
    outdoor_high_threshold: input_number.outdoor_extreme_high_threshold
    outdoor_low_threshold: input_number.outdoor_extreme_low_threshold
    outdoor_temperature_sensor: sensor.side_yard_temp
    thermostat: climate.thermostat

lightning_detected_automation:
  module: climate
  class: LightningDetected
  properties:
    notification_window_seconds: 1200
  state_changes:
    - disable:
        event: MODE_CHANGE
        event_data:
          name: vacation_mode
          state: "on"
      enable:
        event: MODE_CHANGE
        event_data:
          name: vacation_mode
          state: "off"
    - disable:
        event: MODE_CHANGE
        event_data:
          name: blackout_mode
          state: "on"
      enable:
        event: MODE_CHANGE
        event_data:
          name: blackout_mode
          state: "off"
    - disable:
        event: PROXIMITY_CHANGE
        event_data:
          old: home
      enable:
        event: PROXIMITY_CHANGE
        event_data:
          new: home

notify_bad_aqi_automation:
  module: climate
  class: NotifyBadAqi
  dependencies:
    - climate_manager
    - vacation_mode
  entity_ids:
    aqi: sensor.us_air_quality_index
  properties:
    aqi_threshold: 100
  state_changes:
    - disable:
        event: MODE_CHANGE
        event_data:
          name: vacation_mode
          state: "on"
      enable:
        event: MODE_CHANGE
        event_data:
          name: vacation_mode
          state: "off"
    - disable:
        event: MODE_CHANGE
        event_data:
          name: blackout_mode
          state: "on"
      enable:
        event: MODE_CHANGE
        event_data:
          name: blackout_mode
          state: "off"
    - disable:
        event: PROXIMITY_CHANGE
        event_data:
          old: home
      enable:
        event: PROXIMITY_CHANGE
        event_data:
          new: home

thermostat_schedule:
  module: hass_apps_loader
  class: SchedyApp
  constrain_input_boolean: "input_boolean.climate_away_mode,off"

  actor_type: thermostat

  expression_environment: |
    def hvac_mode():
      return state("climate.thermostat")

  schedule_snippets:
    cooling_season:
      - v: 72
        rules:
          - {start: "20:30", end: "07:00", weekdays: "1-4, 7"}
          - {start: "20:30", end: "08:30", weekdays: "5-6"}
      - v: 75
    heating_season:
      - v: 68
        rules:
          - {start: "20:30", end: "07:00"}
      - v: 70

  rooms:

    whole_house:

      actors:
        climate.thermostat:
          supports_hvac_modes: false
          max_temp: 95
          min_temp: 45

      rescheduling_delay: 0

      schedule:
        - x: "IncludeSchedule(schedule_snippets['cooling_season']) \
              if hvac_mode() == 'cool' else Skip()"
        - x: "IncludeSchedule(schedule_snippets['heating_season']) \
              if hvac_mode() == 'heat' else Skip()"

  watched_entities:
    - climate.thermostat
