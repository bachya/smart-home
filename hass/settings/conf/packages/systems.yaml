---
automation:
  - alias: "Forward HASS persistent notifications to Slack"
    id: "forward_hass_persistent_notifications_to_slack"
    trigger:
      platform: event
      event_type: call_service
      event_data:
        domain: persistent_notification
        service: create
    action:
      service: notify.slack
      data:
        message: >
            ðŸ“¥ Home Assistant Notification:
            {{ trigger.event.data.service_data.message }}

  - alias: "Manage HASS Themes"
    id: "manage_hass_themes"
    trigger:
      - platform: event
        event_type: LOCAL_SUNSET
      - platform: homeassistant
        event: start
      - platform: sun
        event: sunrise
    action:
      choose:
        - conditions:
            - condition: or
              conditions:
                - condition: template
                  value_template: >
                    {{ trigger.event.event_type == "LOCAL_SUNSET" }}
                - condition: sun
                  after: sunset
          sequence:
            - service: frontend.set_theme
              data:
                name: Orange Dark
        - conditions:
            - condition: sun
              after: sunrise
          sequence:
            - service: frontend.set_theme
              data:
                name: Orange light

  - alias: "Notify on HACS updates"
    id: "notify_on_hacs_updates"
    trigger:
      platform: state
      entity_id: sensor.hacs
    condition:
      condition: numeric_state
      entity_id: sensor.hacs
      above: 0
    action:
      service: notify.slack
      data:
        message: >
          ðŸ’¿ There are new HACS updates: {{ trigger.to_state.state }}

  - alias: "Notify on high CPU"
    id: "notify_on_high_cpu"
    trigger:
      - platform: numeric_state
        entity_id:
          - sensor.gryffindor_cpu_used
          - sensor.hufflepuff_cpu_used
          - sensor.linode_cpu_used
          - sensor.ravenclaw_cpu_used
          - sensor.slytherin_cpu_used
        above: 60
        for:
          minutes: 5
    action:
      service: notify.slack
      data:
        message: >
          {% if trigger.entity_id == "sensor.gryffindor_cpu_used" %}
            {% set name = "Gryffindor" %}
          {% elif trigger.entity_id == "sensor.hufflepuff_cpu_used" %}
            {% set name = "Hufflepuff" %}
          {% elif trigger.entity_id == "sensor.linode_cpu_used" %}
            {% set name = "Linode" %}
          {% elif trigger.entity_id == "sensor.ravenclaw_cpu_used" %}
            {% set name = "Ravenclaw" %}
          {% elif trigger.entity_id == "sensor.slytherin_cpu_used" %}
            {% set name = "Slytherin" %}
          {% endif %}

          ðŸš¨ {{ name }} has used more than 60% CPU for more than 5 minutes.

  - alias: "Notify on high disk usage"
    id: "notify_on_high_disk_usage"
    trigger:
      - platform: numeric_state
        entity_id:
          - sensor.gryffindor_etc_hosts_used_percent
          - sensor.hufflepuff_etc_hosts_used_percent
          - sensor.linode_etc_hosts_used_percent
          - sensor.ravenclaw_etc_hosts_used_percent
          - sensor.slytherin_etc_hosts_used_percent
        above: 85
    action:
      service: notify.slack
      data:
        message: >
          {% if trigger.entity_id
             == "sensor.gryffindor_etc_hosts_used_percent" %}
            {% set name = "Gryffindor" %}
          {% elif trigger.entity_id
             == "sensor.hufflepuff_etc_hosts_used_percent" %}
            {% set name = "Hufflepuff" %}
          {% elif trigger.entity_id == "sensor.linode_etc_hosts_used_percent" %}
            {% set name = "Linode" %}
          {% elif trigger.entity_id
             == "sensor.ravenclaw_etc_hosts_used_percent" %}
            {% set name = "Ravenclaw" %}
          {% elif trigger.entity_id
             == "sensor.slytherin_etc_hosts_used_percent" %}
            {% set name = "Slytherin" %}
          {% endif %}

          ðŸš¨ {{ name }} is at more than 85% of its disk space.

  - alias: "Notify on high memory"
    id: "notify_on_high_memory"
    trigger:
      - platform: numeric_state
        entity_id:
          - sensor.gryffindor_ram_used_percent
          - sensor.hufflepuff_ram_used_percent
          - sensor.linode_ram_used_percent
          - sensor.ravenclaw_ram_used_percent
          - sensor.slytherin_ram_used_percent
        above: 75
        for:
          minutes: 5
    action:
      service: notify.slack
      data:
        message: >
          {% if trigger.entity_id == "sensor.gryffindor_ram_used_percent" %}
            {% set name = "Gryffindor" %}
          {% elif trigger.entity_id == "sensor.hufflepuff_ram_used_percent" %}
            {% set name = "Hufflepuff" %}
          {% elif trigger.entity_id == "sensor.linode_ram_used_percent" %}
            {% set name = "Linode" %}
          {% elif trigger.entity_id == "sensor.ravenclaw_ram_used_percent" %}
            {% set name = "Ravenclaw" %}
          {% elif trigger.entity_id == "sensor.slytherin_ram_used_percent" %}
            {% set name = "Slytherin" %}
          {% endif %}

          ðŸš¨ {{ name }} has used more than 75% memory for more than 5 minutes.

  - alias: "Notify when battery is low"
    id: "notify_when_battery_is_low"
    trigger:
      - platform: numeric_state
        entity_id:
          - sensor.basement_fire_fighter_battery_level
          - sensor.fiddle_leaf_fig_battery
          - sensor.front_door_lock_battery_level
          - sensor.garage_fire_door_lock_battery_level
          - sensor.kitchen_sink_sensor_battery
          - sensor.nanomote_quad_battery_level
        below: 20
        for:
          minutes: 5
      - platform: state
        entity_id:
          - binary_sensor.basement_sensor_low_battery
          - binary_sensor.guest_bedroom_sensor_low_battery
          - binary_sensor.kitchen_sensor_low_battery
          - binary_sensor.kitchen_sink_sensor_low_battery
          - binary_sensor.upstairs_hallway_sensor_low_battery
        to: "on"
        for:
          minutes: 5
    action:
      service: notify.slack
      data:
        message: "ðŸ”‹ @aaron {{ trigger.entity_id }} is low."

  - alias: "Notify when public IP changes"
    id: "notify_when_public_ip_changes"
    trigger:
      platform: state
      entity_id: sensor.bachho_me
    action:
      service: notify.slack
      data:
        message: >
          ðŸ–¥  Our public IP has changed: {{ trigger.to_state.state }}

  - alias: "Notify when sensor goes offline"
    id: "notify_when_sensor_goes_offline"
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.basement_sensor_missing
          - binary_sensor.guest_bedroom_sensor_missing
          - binary_sensor.kitchen_sensor_missing
          - binary_sensor.master_bathroom_climate_sensor_status
          - binary_sensor.master_bedroom_salt_lamp_status
          - binary_sensor.office_salt_lamp_status
          - binary_sensor.upstairs_hallway_sensor_missing
        to: "off"
        for:
          minutes: 5
    action:
      service: notify.slack
      data:
        message: "ðŸ¤” @aaron {{ trigger.entity_id }} is offline."

sensor:
  - platform: dnsip
    hostname: !secret base_domain_name

  - platform: filter
    name: Filtered Speedtest Download
    entity_id: sensor.speedtest_download
    filters:
      - filter: lowpass
        time_constant: 10
        precision: 2

  - platform: filter
    name: Filtered Speedtest Ping
    entity_id: sensor.speedtest_ping
    filters:
      - filter: lowpass
        time_constant: 10
        precision: 2

  - platform: filter
    name: Filtered Speedtest Upload
    entity_id: sensor.speedtest_upload
    filters:
      - filter: lowpass
        time_constant: 10
        precision: 2

  - platform: rest
    name: Healthchecks.io Ping
    resource: !secret healthchecksio_ping_url
    scan_interval:
      minutes: 5

  - platform: version
    name: HASS Available
    source: docker
    beta: true

  - platform: version
    name: HASS Installed

speedtestdotnet:
