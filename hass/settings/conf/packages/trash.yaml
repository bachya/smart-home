---
automation:
  - alias: "Trash: Notify about next Ridwell pickup"
    id: "trash_notify_about_next_ridwell_pickup"

    trigger:
      - platform: time
        id: day_of_time
        at: "07:45:00"

      - platform: time
        id: night_before_time
        at: "19:00:00"

    condition:
      - or:
          - and:
              - condition: trigger
                id: day_of_time

              - condition: template
                value_template: >
                  {{
                    (
                      states("sensor.ridwell_pickup")
                      | as_datetime
                      | as_local - now()
                    ).days == -1
                  }}

          - and:
              - condition: trigger
                id: night_before_time

              - condition: template
                value_template: >
                  {{
                    (
                      states("sensor.ridwell_pickup")
                      | as_datetime
                      | as_local - now()
                    ).days == 0
                  }}

    action:
      - alias: "Send the notification"
        service: script.turn_on
        target:
          entity_id: script.notify_everyone_at_home
        data:
          variables:
            interruption_level: time-sensitive
            message: >-
              ♻️ The pickup will include:
                {% for name, attrs in state_attr(
                  "sensor.ridwell_pickup", "pickup_types"
                ).items() | sort -%}
                    {{ name }} (x{{ attrs["quantity"] }})
                    {%- if not loop.last %}, {% endif -%}
                {% endfor %}
            title: >-
              {% if trigger.id == "day_of_time" %}
                Today's Ridwell Pickup
              {% else %}
                Tomorrow's Ridwell Pickup
              {% endif %}

  - alias: "Trash: Notify about next pickup"
    id: "trash_notify_about_next_pickup"

    trigger:
      - platform: time
        at: "19:00:00"

    condition:
      - condition: template
        value_template: >
          {{
            (
              states("sensor.recollect_waste")
              | as_datetime
              | as_local
              - now()
            ).days == 0
          }}

    action:
      - alias: "Send the notification"
        service: script.turn_on
        target:
          entity_id: script.notify_everyone_at_home
        data:
          variables:
            interruption_level: time-sensitive
            message: >
              🚮 The pickup will include: {{
                expand("group.trash_sensors")
                | selectattr("state", "equalto", "on")
                | join(", ", attribute="attributes.friendly_name")
                | lower
              }}
            title: Tomorrow's Trash Pickup

group:
  trash_sensors:
    name: Trash Sensors
    entities:
      - binary_sensor.recollect_next_pickup_includes_extra_trash
      - binary_sensor.recollect_next_pickup_includes_recycling
      - binary_sensor.recollect_next_pickup_includes_trash

template:
  binary_sensor:
    - name: Recollect Next Pickup Includes Extra Trash
      state: >
        {{ "ExtraTrash_Day" in state_attr(
          "sensor.recollect_waste", "pickup_types"
        ) }}
      unique_id: recollect_next_pickup_includes_extra_trash

    - name: Recollect Next Pickup Includes Recycling
      state: >
        {{ "recycle" in state_attr(
          "sensor.recollect_waste", "pickup_types"
        ) }}
      unique_id: recollect_next_pickup_includes_recycling

    - name: Recollect Next Pickup Includes Trash
      state: >
        {{ "garbage" in state_attr(
          "sensor.recollect_waste", "pickup_types"
        ) }}
      unique_id: recollect_next_pickup_includes_trash

    - name: Ridwell Next Pickup Scheduled
      state: >
        {{
          state_attr("sensor.ridwell_pickup", "pickup_state") == "scheduled"
        }}
      unique_id: ridwell_next_pickup_scheduled

  sensor:
    - name: Ridwell iotating Pickup
      state: >
        {% for name, attrs in state_attr(
          "sensor.ridwell_pickup", "pickup_types"
        ).items() -%}
          {% if attrs["category"] == "rotating" %}
            {{ name }}
          {% endif %}
        {% endfor %}
      unique_id: ridwell_next_rotating_pickup

  unique_id: trash
