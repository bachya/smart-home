---
automation:
  - alias: "Backyard lights schedule"
    id: "backyard_lights_schedule"
    trigger:
      - platform: time
        at: "21:30:00"
      - platform: time
        at: "23:00:00"
      - platform: event
        event_type: LOCAL_SUNSET
    action:
      choose:
        - conditions:
            - condition: template
              value_template: '{{ trigger.platform == "event" }}'
          sequence:
            - service: switch.turn_on
              entity_id: switch.backyard_lights
        - conditions:
            - condition: state
              entity_id: binary_sensor.workday_tomorrow
              state: "on"
            - condition: template
              value_template: "{{ trigger.now.hour == 21 }}"
          sequence:
            - service: switch.turn_off
              entity_id: switch.backyard_lights
        - conditions:
            - condition: state
              entity_id: binary_sensor.workday_tomorrow
              state: "off"
            - condition: template
              value_template: "{{ trigger.now.hour == 23 }}"
          sequence:
            - service: switch.turn_off
              entity_id: switch.backyard_lights

  - alias: "Fire local event for weather station-detected sunset"
    id: "fire_local_event_for_weather_stationdetected_sunset"
    trigger:
      - platform: state
        entity_id: sensor.filtered_outdoor_brightness
        # If for some reason the weather station is down and the actual trigger
        # fails, we also watch for "regular" sunset:
      - platform: sun
        event: sunset
    condition:
      condition: and
      conditions:
        - condition: time
          after: "15:00:00"
        - condition: numeric_state
          entity_id: sensor.filtered_outdoor_brightness
          below: 60
          # As it gets darker, this automation has the possibility of firing
          # multiple times; this condition forces it to only fire once per day:
        - condition: template
          value_template: >
            {{
              as_timestamp(
                state_attr(
                  "automation.fire_local_event_for_weather_station_detected_sunset",
                  "last_triggered"
                )
              ) | timestamp_custom('%-d')
              != as_timestamp(now()) | timestamp_custom('%-d')
            }}
    action:
      - event: LOCAL_SUNSET

  - alias: "Patio lights schedule"
    id: "patio_lights_schedule"
    trigger:
      - platform: time
        at: "23:00:00"
      - platform: event
        event_type: LOCAL_SUNSET
    condition:
    action:
      choose:
        - conditions:
            - condition: time
              after: "23:00:00"
          sequence:
            - service: homeassistant.turn_off
              entity_id: group.patio_lights
      default:
        - service: homeassistant.turn_on
          entity_id: group.patio_lights

group:
  patio_lights:
    entities:
      - switch.front_patio_light
      - switch.kitchen_patio_light
      - switch.master_patio_light
    all: true
