---
alert:
  alarm_triggered:
    name: "🚨 The alarm has been triggered."
    done_message: "✅ The alarm has been canceled."
    title: House Alert
    entity_id: alarm_control_panel.123_main_street
    state: triggered
    repeat:
      - 1
    notifiers:
      - everyone
    data:
      sound:
        name: default
        critical: 1
        volume: 0.3

  garage_left_open:
    name: 🚗 The garage has been left open.
    done_message: ✅ The garage is now closed.
    title: House Alert
    entity_id: cover.garage_door
    state: open
    repeat:
      - 10
    skip_first: true
    notifiers:
      - everyone
    data:
      blocks:
        - type: section
          text:
            type: plain_text
            text: 🚗 The garage has been left open.
        - type: actions
          elements:
            - type: button
              text:
                type: plain_text
                text: Close Garage
              action_id: GARAGE_CLOSE_DOOR
            - type: button
              text:
                type: plain_text
                text: Ignore
              action_id: GARAGE_IGNORE
      push:
        category: GARAGE
      sound:
        name: default
        critical: 1
        volume: 0.3

  house_empty_and_insecure:
    name: "🚨 The house isn't secure and no one is home."
    done_message: "✅ The house is now secure."
    title: House Alert
    entity_id: binary_sensor.house_open_and_insecure
    state: "on"
    repeat:
      - 1
      - 5
    skip_first: true
    notifiers:
      - everyone
    data:
      push:
        category: SECURITY
      sound:
        name: default
        critical: 1
        volume: 0.3

  smoke_detected:
    name: "🚨 Smoke/CO has been detected."
    done_message: "✅ The smoke/CO has cleared."
    title: House Alert
    entity_id: group.smoke_detectors
    state: "on"
    repeat:
      - 1
    notifiers:
      - everyone
    data:
      sound:
        name: default
        critical: 1
        volume: 0.3

automation:
  - alias: "Automatically lock up at night"
    trigger:
      platform: time
      at: "00:00:00"
    condition:
      condition: state
      entity_id: binary_sensore.secure_status
      state: "off"
    action:
      - service: notify.slack
        data:
          message: "🔒 Locking up the house"
      - scene: scene.good_night

  - alias: "Automatically lock up when we depart"
    trigger:
      platform: state
      entity_id: sensor.proximity_zone
      from: Home
    action:
      - service: notify.slack
        data:
          message: "🔒 Locking up the house"
      - scene: scene.depart_home

  - alias: "Forward SimpliSafe events and notifications to Slack"
    trigger:
      - platform: event
        event_type: SIMPLISAFE_EVENT
      - platform: event
        event_type: SIMPLISAFE_NOTIFICATION
    action:
      service: notify.slack
      data:
        message: >
          {% if trigger.event.event_type == "SIMPLISAFE_EVENT" %}
            {% set message = trigger.event.data.last_event_info %}
          {% elif trigger.event.event_type == "SIMPLISAFE_NOTIFICATION" %}
            {% set message = trigger.event.data.message %}
          {% endif %}

          📥 SimpliSafe Message: {{ message }}

  - alias: "Manage SimpliSafe sounds during blackout"
    trigger:
      platform: state
      entity_id: input_boolean.blackout_mode
    action:
      choose:
        - conditions:
            condition: state
            entity_id: input_boolean.blackout_mode
            state: "on"
          sequence:
            service: simplisafe.set_system_properties
            data:
              system_id: !secret simplisafe_system_id
              chime_volume: 0
              voice_prompt_volume: 0
        - conditions:
            condition: state
            entity_id: input_boolean.blackout_mode
            state: "off"
          sequence:
            service: simplisafe.set_system_properties
            data:
              system_id: !secret simplisafe_system_id
              chime_volume: 2
              voice_prompt_volume: 2

  - alias: "Notify when security status changes"
    trigger:
      platform: state
      entity_id: binary_sensor.secure_status
    action:
      service: notify.slack
      data:
        message: >
          🔐 The house's security has changed: {{ trigger.to_state.state }}

  - alias: "Turn lights on when doorbell detects person at nighttime"
    trigger:
      - platform: device
        device_id: !secret nest_hello_device_id
        domain: nest
        type: camera_person
      - platform: device
        device_id: !secret nest_hello_device_id
        domain: nest
        type: doorbell_chime
    condition:
      condition: time
      after: "23:00:00"
      before: "04:00:00"
    action:
      - service: switch.turn_on
        data:
          entity_id: switch.front_patio_light_switch
      - service: switch.turn_on
        data:
          entity_id: group.living_room_lights
      - delay:
          minutes: 5
      - service: switch.turn_off
        data:
          entity_id: switch.front_patio_light_switch
      - service: switch.turn_on
        data:
          entity_id: group.living_room_lights

  - alias: "Vacation Mode Lighting"
    trigger:
      - platform: state
        entity_id: sensor.replay_basement_lights
      - platform: state
        entity_id: sensor.replay_living_room_lights
      - platform: state
        entity_id: sensor.replay_master_bedroom_patio_light
      - platform: state
        entity_id: sensor.replay_master_bedroom_salt_lamp
    condition:
      condition: state
      entity_id: input_boolean.vacation_mode
      state: "on"
    action:
      service: >
        {% if trigger.to_state.state == "0" %}
          switch.turn_off
        {% else %}
          switch.turn_on
        {% endif %}
      data:
        entity_id: >
          {% if trigger.entity_id == "sensor.replay_basement_lights" %}
            switch.basement_lights
          {% elif trigger.entity_id == "sensor.replay_living_room_lights" %}
            group.living_room_lights
          {%
            elif trigger.entity_id
            == "sensor.replay_master_bedroom_patio_light"
          %}
            switch.master_patio_light_switch
          {%
            elif trigger.entity_id
            == "sensor.replay_master_bedroom_salt_lamp"
          %}
            switch.master_bedroom_salt_lamp
          {% endif %}

binary_sensor:
  - platform: template
    sensors:
      house_open_and_insecure:
        value_template: >
          {{
            is_state("binary_sensor.secure_status", "on") and
            not is_state("sensor.proximity_zone", "Home")
          }}

      secure_status:
        friendly_name: Security Status
        value_template: >
          {{
            is_state("lock.123_main_street_patio_door", "unlocked")
            or is_state("lock.front_door_lock_locked", "unlocked")
            or is_state("lock.garage_fire_door_lock_locked", "unlocked")
            or is_state(
              "alarm_control_panel.123_main_street", "disarmed"
            )
            or is_state("cover.garage_door", "open")
          }}
        device_class: lock

group:
  smoke_detectors:
    entities:
      - binary_sensor.basement_sensor_smoke_carbon_monoxide_detector
      - binary_sensor.firefighter_smoke_alarm_smoke_detected
      - binary_sensor.guest_bedroom_sensor_smoke_carbon_monoxide_detector
      - binary_sensor.kitchen_sensor_smoke_carbon_monoxide_detector
      - binary_sensor.upstairs_hallway_sensor_smoke_carbon_monoxide_detector

sensor:
  - platform: history_stats
    name: "Replay Basement Lights"
    entity_id: switch.basement_lights
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30

  - platform: history_stats
    name: "Replay Basement TV"
    entity_id: remote.basement_tv
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30

  - platform: history_stats
    name: "Replay Living Room Lights"
    entity_id: switch.reading_lamp
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30

  - platform: history_stats
    name: "Replay Living Room TV"
    entity_id: remote.living_room_tv
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30

  - platform: history_stats
    name: "Replay Master Bedroom Patio Light"
    entity_id: switch.master_patio_light_switch
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30

  - platform: history_stats
    name: "Replay Master Bedroom Salt Lamp"
    entity_id: switch.master_bedroom_salt_lamp
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30
