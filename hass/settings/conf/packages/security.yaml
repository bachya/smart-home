---
alert:
  alarm_triggered:
    name: 🚨 The alarm has been triggered.
    title: Security Alert
    entity_id: alarm_control_panel.123_main_street
    state: triggered
    repeat:
      - 1
    notifiers:
      - everyone
    data:
      push:
        category: SECURITY
      sound:
        name: default
        critical: 1
        volume: 0.3

  garage_left_open:
    name: 🚗 The garage has been left open.
    title: Security Alert
    entity_id: cover.garage_door
    state: open
    repeat:
      - 5
      - 10
      - 30
    skip_first: true
    notifiers:
      - everyone
    data:
      sound:
        name: default
        critical: 1
        volume: 0.3

  house_empty_and_insecure:
    name: |
      🚨 No one is home and the house isn't secure.
    title: Security Alert
    entity_id: binary_sensor.house_open_and_insecure
    state: "on"
    repeat:
      - 5
    skip_first: true
    notifiers:
      - everyone
    data:
      push:
        category: SECURITY
      sound:
        name: default
        critical: 1
        volume: 0.3

  smoke_detected:
    name: "🚨 Smoke/CO has been detected."
    title: House Alert
    entity_id: group.smoke_detectors
    state: "on"
    repeat:
      - 1
    notifiers:
      - everyone
    data:
      sound:
        name: default
        critical: 1
        volume: 0.3

automation:
  - alias: "Automatic Lockup"
    trigger:
      # Everyone leaves home:
      - platform: state
        entity_id: sensor.proximity_zone
        from: Home
      # The house is insecure for 30 minutes while we're in bed:
      - platform: state
        entity_id: binary_sensor.house_insecure_when_in_bed
        to: "on"
        for:
          minutes: 30
    action:
      - service: notify.everyone
        data:
          message: "🔒 Locking up the house"
      - choose:
          - conditions:
              condition: template
              value_template: >
                {{ trigger.entity_id == "sensor.proximity_zone" }}
            sequence:
              scene: scene.depart_home
          - conditions:
              condition: template
              value_template: >
                {{ trigger.entity_id
                   == "binary_sensor.house_insecure_when_in_bed" }}
            sequence:
              scene: scene.good_night

  - alias: "Forward SimpliSafe events and notifications to Slack"
    trigger:
      - platform: event
        event_type: SIMPLISAFE_EVENT
      - platform: event
        event_type: SIMPLISAFE_NOTIFICATION
    action:
      service: notify.slack
      data:
        message: >
          {% if trigger.event.event_type == "SIMPLISAFE_EVENT" %}
            {% set message = trigger.event.data.last_event_info %}
          {% elif trigger.event.event_type == "SIMPLISAFE_NOTIFICATION" %}
            {% set message = trigger.event.data.message %}
          {% endif %}

          📥 SimpliSafe Message: {{ message }}

  - alias: "Manage Security via iOS Notifications"
    trigger:
      - platform: event
        event_type: ios.notification_action_fired
        event_data:
          categoryName: SECURITY
    action:
      choose:
        - conditions:
            condition: template
            value_template: >
              {{ trigger.event.data.actionName == "DEPART_HOME" }}
          sequence:
            scene: scene.depart_home
        - conditions:
            condition: template
            value_template: >
              {{ trigger.event.data.actionName == "GOOD_NIGHT" }}
          sequence:
            scene: scene.good_night
        - conditions:
            condition: template
            value_template: >
              {{ trigger.event.data.actionName == "IGNORE" }}
          sequence:
            - service: automation.turn_off
              entity_id: automation.automatic_lockup
            - service: alert.turn_off
              entity_id: alert.house_empty_and_insecure

  - alias: "Manage SimpliSafe sounds during blackout"
    trigger:
      platform: state
      entity_id: input_boolean.blackout_mode
    action:
      choose:
        - conditions:
            condition: state
            entity_id: input_boolean.blackout_mode
            state: "on"
          sequence:
            service: simplisafe.set_system_properties
            data:
              system_id: !secret simplisafe_system_id
              chime_volume: 0
              voice_prompt_volume: 0
        - conditions:
            condition: state
            entity_id: input_boolean.blackout_mode
            state: "off"
          sequence:
            service: simplisafe.set_system_properties
            data:
              system_id: !secret simplisafe_system_id
              chime_volume: 2
              voice_prompt_volume: 2

  - alias: "Notify when security status changes"
    trigger:
      platform: state
      entity_id: binary_sensor.secure_status
    action:
      service: notify.slack
      data:
        message: >
          🔐 The house's security has changed: {{ trigger.to_state.state }}

  - alias: "Simulate someone being home"
    trigger:
      - platform: state
        entity_id: sensor.replay_bar_cart_leds
      - platform: state
        entity_id: sensor.replay_basement_lights
      - platform: state
        entity_id: sensor.replay_basement_tv
      - platform: state
        entity_id: sensor.replay_christmas_tree
      - platform: state
        entity_id: sensor.replay_reading_lamp
      - platform: state
        entity_id: sensor.replay_sofa_lamp
      - platform: state
        entity_id: sensor.replay_living_room_tv
      - platform: state
        entity_id: sensor.replay_master_bedroom_patio_light
      - platform: state
        entity_id: sensor.replay_master_bedroom_salt_lamp
    action:
      choose:
        - conditions:
            condition: template
            value_template: >
              {{
                trigger.entity_id == "sensor.replay_basement_tv"
                and trigger.to_state.state == "1"
              }}
          sequence:
            - service: remote.turn_on
              data:
                entity_id: remote.basement_tv
            - wait_template: >
                {{
                  is_state_attr(
                    "media_player.basement_roku",
                    "app_name",
                    "Locast.org"
                  )
                }}
            - service: remote.send_command
              data:
                entity_id: media_player.basement_roku
                command: select
        - conditions:
            condition: template
            value_template: >
              {{
                trigger.entity_id == "sensor.replay_basement_tv"
                and trigger.to_state.state == "0"
              }}
          sequence:
            service: remote.turn_off
            data:
              entity_id: remote.basement_tv
        - conditions:
            condition: template
            value_template: >
              {{
                trigger.entity_id == "sensor.replay_living_room_tv"
                and trigger.to_state.state == "1"
              }}
          sequence:
            - service: remote.turn_on
              data:
                entity_id: remote.basement_tv
            - wait_template: >
                {{
                  is_state_attr(
                    "media_player.basement_roku",
                    "app_name",
                    "Locast.org"
                  )
                }}
            - service: remote.send_command
              data:
                entity_id: media_player.basement_roku
                command: select
            - service: media_player.volume_set
              data:
                entity_id: media_player.sonos_playbar
                volume_level: 0.25
        - conditions:
            condition: template
            value_template: >
              {{
                trigger.entity_id == "sensor.replay_living_room_tv"
                and trigger.to_state.state == "0"
              }}
          sequence:
            - service: media_player.select_source
              data:
                entity_id: media_player.living_room_roku
                source: Home
            - delay: "00:00:05"
            - service: remote.turn_off
              data:
                entity_id: remote.living_room_tv
      default:
        service: >
          {% if trigger.to_state.state == "0" %}
            switch.turn_off
          {% else %}
            switch.turn_on
          {% endif %}
        data:
          entity_id: >
            {% if trigger.entity_id == "sensor.replay_bar_cart_leds" %}
              switch.bar_cart_leds
            {% elif trigger.entity_id == "sensor.replay_basement_lights" %}
              switch.basement_lights
            {% elif trigger.entity_id == "sensor.replay_christmas_tree" %}
              switch.christmas_tree
            {%
              elif trigger.entity_id
              == "sensor.replay_master_bedroom_patio_light"
            %}
              switch.master_patio_light_switch
            {%
              elif trigger.entity_id
              == "sensor.replay_master_bedroom_salt_lamp"
            %}
              switch.master_bedroom_salt_lamp
            {% elif trigger.entity_id == "sensor.replay_reading_lamp" %}
              switch.reading_lamp
            {% elif trigger.entity_id == "sensor.replay_sofa_lamp" %}
              switch.sofa_lamp
            {% endif %}

  - alias: "Turn off simulated TVs when we get home"
    trigger:
      platform: state
      entity_id: automation.simulate_someone_being_home
      to: "off"
    action:
      - service: remote.turn_off
        data:
          entity_id: remote.basement_tv
      - service: remote.turn_off
        data:
          entity_id: remote.living_room_tv

binary_sensor:
  - platform: template
    sensors:
      house_insecure_when_in_bed:
        friendly_name: House Insecure When In Bed
        value_template: >
          {{
            is_state("binary_sensor.in_bed", "on")
            and is_state("binary_sensor.secure_status", "off")
          }}
      house_open_and_insecure:
        value_template: >
          {{
            not is_state("sensor.proximity_zone", "Home")
            and is_state("binary_sensor.secure_status", "off")
          }}

      secure_status:
        friendly_name: Security Status
        value_template: >
          {{
            is_state("lock.123_main_street_patio_door", "locked")
            and is_state("lock.front_door_lock_locked", "locked")
            and is_state("lock.garage_fire_door_lock_locked", "locked")
            and (
              (
                is_state(
                  "alarm_control_panel.123_main_street",
                  "armed_home"
                )
                and is_state("sensor.proximity_zone", "Home")
              )
              or
              (
                is_state(
                  "alarm_control_panel.123_main_street",
                  "armed_away"
                )
                and not is_state("sensor.proximity_zone", "Home")
              )
            )
            and is_state("cover.garage_door", "closed")
          }}

group:
  security_devices:
    entities:
      - alarm_control_panel.8673_e_55th_avenue
      - cover.garage_door
      - lock.8673_e_55th_avenue_patio_door
      - lock.front_door_lock_locked
      - lock.garage_fire_door_lock_locked
  smoke_detectors:
    entities:
      - binary_sensor.basement_sensor_smoke_carbon_monoxide_detector
      - binary_sensor.firefighter_smoke_alarm_smoke_detected
      - binary_sensor.guest_bedroom_sensor_smoke_carbon_monoxide_detector
      - binary_sensor.kitchen_sensor_smoke_carbon_monoxide_detector
      - binary_sensor.upstairs_hallway_sensor_smoke_carbon_monoxide_detector

sensor:
  - platform: history_stats
    name: "Replay Bar Cart LEDs"
    entity_id: switch.bar_cart_leds
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30

  - platform: history_stats
    name: "Replay Basement Lights"
    entity_id: switch.basement_lights
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30

  - platform: history_stats
    name: "Replay Basement TV"
    entity_id: remote.basement_tv
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30

  - platform: history_stats
    name: "Replay Christmas Tree"
    entity_id: switch.christmas_tree
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30

  - platform: history_stats
    name: "Replay Living Room TV"
    entity_id: remote.living_room_tv
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30

  - platform: history_stats
    name: "Replay Master Bedroom Patio Light"
    entity_id: switch.master_patio_light_switch
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30

  - platform: history_stats
    name: "Replay Master Bedroom Salt Lamp"
    entity_id: switch.master_bedroom_salt_lamp
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30

  - platform: history_stats
    name: "Replay Reading Lamp"
    entity_id: switch.reading_lamp
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30

  - platform: history_stats
    name: "Replay Sofa Lamp"
    entity_id: switch.sofa_lamp
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30
